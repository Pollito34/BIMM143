---
title: "Class 08: Machine Learning"
author: "Angela Bartolo PID: A15932451"
format: pdf
---

# Breast Cancer Project

Today we are going to explore some data from the University of Wisconsin Cancer Center on Breast biopsy data. 

```{r}
wisc.data <- read.csv("WisconsinCancer.csv", row.names = 1)
head(wisc.data)
```


> Q. How many patient samples are in this dataset? 

```{r}
nrow(wisc.data)
```
 
There are `r nrow(wisc.data)` patients in this dataset. 

> Q. How many cancer (M) and non cancer (B) samples are there? 

```{r}
table(wisc.data$diagnosis)
```

Save the diagnosis for later use as a reference to compare how well we do with PCA etc. 

```{r}
diagnosis <- as.factor(wisc.data$diagnosis)
diagnosis
```

Now exclude diagnosis column from the data

```{r}
wisc <- wisc.data[,-1]
```

> Q. How many "dimensions", "variables", "columns" are there in this dataset? 

```{r}
ncol(wisc)
dim(wisc)
```


# Principal Component Analysis (PCA)

To perform PCA in R we can use the `prcomp()` function. It takes as input a numeric dataset and optional `scale=FALSE/TRUE` argument. 

We general always want to set `scale=TRUE` but let's make sure by checking if the mean and standard deviation values are different across these 30 columns. 

```{r}
round(colMeans(wisc) )
```

```{r}
pca <- prcomp(wisc, scale =TRUE)
summary(pca)
```

```{r}
attributes(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col=diagnosis)
```

```{r}
library(ggplot2)

x <- as.data.frame(pca$x)

ggplot(x) +
  aes( PC1, PC2, col=diagnosis) +
  geom_point()
```

> Q. How much variance is captured in the top 3 PCs. 

They capture  76% of the total variance. 

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

```{r}
pca$rotation["concave.points_mean",1]
```

```{r}
attributes(pca)
```



# Combine PCA results with clustering. 

We can use our new PCA variables (i.e. the scores along the PCs contained in the `pca$x`) as input for other methods such as clustering. 

```{r}
# hclust needs a distance matrix as an input
d <-dist( pca$x[, 1:3] )
hc <- hclust(d, method = "ward.D2")
plot(hc)
```

To get our cluster membership vector we can use the `cutree()` function and specify a height (`h`) or number of groups (`k`). 

```{r}
grps <- cutree(hc, h =80)
table(grps)
```

I want to find out how many diagnosis "M" and "B" are in each group? 

```{r}
table(diagnosis)
```

```{r}
table(diagnosis, grps)
```

We can also plot our results using out clustering vector `grps`. 

```{r}
plot(pca$x[,1], pca$x[,2], col = grps)
```

```{r}
ggplot(x) +
  aes( PC1, PC2) +
  geom_point( col=grps)
```

> Q15. what is the specificity and sensitivity? 

```{r}
tbl <- table(diagnosis, grps)
tbl
```

```{r}
# TP: grps 1,M (179) [2,1]
TP <- tbl[2,1]
# FP grps 1, B (24)  [1,1]
FP <- tbl[1,1]
# TN: grps 2, B (333) [1,2]
TN <- tbl[1,2]
# FN: grps 2, M (33) [2,2]
FN <- tbl[2,2]

# Sensitivity TP/(TP+FN) 
sens <- TP/(TP+FN)
sens

# Specificity TN/(TN+FN)
spec <- TN/(TN+FN) 
spec
```

The sensitivity is 84% and the specificity is 91%. 

## Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(pca, newdata=new)
npc
```
 
```{r}
plot(pca$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
 
> Q16 Which of these new patients should we prioritize for follow up based on your results?

Patient 2 should be prioritized since in the previous graph, that group predicted malignant cancer. 